#!/bin/bash
#
# Modified TMUX start script from:
#     http://forums.gentoo.org/viewtopic-t-836006-start-0.html
#
# Store it to `~/bin/tmx` and issue `chmod +x`.
#

# Works because bash automatically trims by assigning to variables and by
# passing arguments
trim() {
  echo $1;
}

format='#{window_active} #{window_id} #{window_name}'
base_session="$1"
tmux_nb=$(trim `tmux ls | grep "^$base_session" | wc -l`)

activew() {
  { for sid in $(tmux lsc -F '#{client_session}'); do
      tmux lsw -t $sid -F "$format" | awk '{ if ($1 == 1) print $2, $3 }'
    done
  } | tr '\n' '|' | sed 's/|$//'
}

windows() {
  tmux lsw -F "$format" \
    | grep -Ev "$(activew)" \
    | grep fish \
    | awk '{ print $2 }'
}

purge() {
  windows | xargs -Iz tmux kill-window -t z
}

run() {
  # Kill defunct sessions first
  old_sessions=$(tmux ls 2>/dev/null | egrep "^[0-9]{14}.*[0-9]+\)$" | cut -f 1 -d:)
  for old_session_id in $old_sessions; do
    tmux kill-session -t $old_session_id
  done

  echo "Launching copy of base session $base_session ..."

  # Session is is date and time to prevent conflict
  session_id=`date +%Y%m%d%H%M%S`

  # Create a new session (without attaching it) and link to base session
  # to share windows
  tmux new-session -d -t $base_session -s $session_id

  # Create a new window in that session
  tmux new-window

  # Attach to the new session
  tmux attach-session -t $session_id
}

if [[ -z "$1" ]]; then
  echo "Specify session name as the first argument"
  exit
fi

# Only because I often issue `ls` to this script by accident
if [[ "$1" == "ls" ]]; then
  tmux ls
  exit
fi

trap purge EXIT

if [[ "$tmux_nb" == "0" ]]; then
  echo "Launching tmux base session $base_session ..."
  tmux new-session -s $base_session
elif [[ -z "$TMUX" ]]; then
  # Make sure we are not already in a tmux session
  run
fi
